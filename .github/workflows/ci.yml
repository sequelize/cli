name: CI
on:
  push:
    branches:
      - main
      - v6
      - v7
  pull_request:

jobs:
  test-postgres:
    strategy:
      fail-fast: false
      matrix:
        node-version: [10, 16]
        sequelize-version: [5, latest]
    name: Postgres (Node ${{ matrix.node-version }}, Sequelize ${{ matrix.sequelize-version }})
    runs-on: ubuntu-latest
    env:
      DIALECT: postgres
      SEQ_PORT: 54320
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile --ignore-engines
      - run: yarn add sequelize@${{ matrix.sequelize-version }} --ignore-engines
      - run: docker-compose up -d ${DIALECT}
      - run: docker run --link ${DIALECT}:db -e CHECK_PORT=${SEQ_PORT::-1} -e CHECK_HOST=db --net cli_default giorgos/takis
      - run: yarn test
  test-mysql:
    strategy:
      fail-fast: false
      matrix:
        node-version: [10, 16]
        sequelize-version: [5, latest]
    name: MySQL (Node ${{ matrix.node-version }}, Sequelize ${{ matrix.sequelize-version }})
    runs-on: ubuntu-latest
    env:
      DIALECT: mysql
      SEQ_PORT: 33060
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile --ignore-engines
      - run: yarn add sequelize@${{ matrix.sequelize-version }} --ignore-engines
      - run: docker-compose up -d ${DIALECT}
      - run: docker run --link ${DIALECT}:db -e CHECK_PORT=${SEQ_PORT::-1} -e CHECK_HOST=db --net cli_default giorgos/takis
      - run: yarn test
  test-sqlite:
    strategy:
      fail-fast: false
      matrix:
        node-version: [10, 16]
        sequelize-version: [5, latest]
    name: SQLite (Node ${{ matrix.node-version }}, Sequelize ${{ matrix.sequelize-version }})
    runs-on: ubuntu-latest
    env:
      DIALECT: sqlite
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile --ignore-engines
      - run: yarn add sequelize@${{ matrix.sequelize-version }} --ignore-engines
      - run: yarn test
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      [
        test-sqlite,
        test-postgres,
        test-mysql
      ]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/v6' || github.ref == 'refs/heads/v7')
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - run: yarn install --frozen-lockfile
      - run: npx semantic-release
      - id: sequelize
        uses: sdepold/github-action-get-latest-release@master
        with:
          repository: sequelize/cli
      - run: |
          curl -XPOST -u "sdepold:${{ secrets.GH_TOKEN }}" -H "Accept: application/vnd.github.v3+json" -H "Content-Type: application/json" https://api.github.com/repos/sequelize/cli/dispatches --data '{"event_type":"Release notifier","client_payload":{"release-id": ${{ steps.sequelize.outputs.id }}}}'
